//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;

//
// This source code was auto-generated by xsd, Version=4.6.1055.0.
//


/// <remarks/>

namespace eaw.build.data.config.v1
{
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("ModBuildConfig", Namespace = "", IsNullable = false)]
    public partial class ModBuildConfigType : object, System.ComponentModel.INotifyPropertyChanged
    {

        private ModSettingsType modSettingsField;

        private BuildSettingsType buildSettingsField;

        /// <remarks/>
        public ModSettingsType ModSettings
        {
            get { return this.modSettingsField; }
            set
            {
                this.modSettingsField = value;
                this.RaisePropertyChanged("ModSettings");
            }
        }

        /// <remarks/>
        public BuildSettingsType BuildSettings
        {
            get { return this.buildSettingsField; }
            set
            {
                this.buildSettingsField = value;
                this.RaisePropertyChanged("BuildSettings");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModSettingsType : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string nameField;

        private string shortNameField;

        private string versionField;

        private string releaseTypeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get { return this.nameField; }
            set
            {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ShortName
        {
            get { return this.shortNameField; }
            set
            {
                this.shortNameField = value;
                this.RaisePropertyChanged("ShortName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version
        {
            get { return this.versionField; }
            set
            {
                this.versionField = value;
                this.RaisePropertyChanged("Version");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ReleaseType
        {
            get { return this.releaseTypeField; }
            set
            {
                this.releaseTypeField = value;
                this.RaisePropertyChanged("ReleaseType");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DirectoryType : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string filePatternField;

        private string recurseField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FilePattern
        {
            get { return this.filePatternField; }
            set
            {
                this.filePatternField = value;
                this.RaisePropertyChanged("FilePattern");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Recurse
        {
            get { return this.recurseField; }
            set
            {
                this.recurseField = value;
                this.RaisePropertyChanged("Recurse");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get { return this.valueField; }
            set
            {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BundleType : object, System.ComponentModel.INotifyPropertyChanged
    {

        private DirectoryType[] directoryField;

        private string[] fileField;

        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Directory")]
        public DirectoryType[] Directory
        {
            get { return this.directoryField; }
            set
            {
                this.directoryField = value;
                this.RaisePropertyChanged("Directory");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("File")]
        public string[] File
        {
            get { return this.fileField; }
            set
            {
                this.fileField = value;
                this.RaisePropertyChanged("File");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get { return this.nameField; }
            set
            {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocalisationType : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string localisationFileField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LocalisationFile
        {
            get { return this.localisationFileField; }
            set
            {
                this.localisationFileField = value;
                this.RaisePropertyChanged("LocalisationFile");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuildSettingsType : object, System.ComponentModel.INotifyPropertyChanged
    {

        private LocalisationType localisationField;

        private BundleType[] bundleField;

        /// <remarks/>
        public LocalisationType Localisation
        {
            get { return this.localisationField; }
            set
            {
                this.localisationField = value;
                this.RaisePropertyChanged("Localisation");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Bundle")]
        public BundleType[] Bundle
        {
            get { return this.bundleField; }
            set
            {
                this.bundleField = value;
                this.RaisePropertyChanged("Bundle");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
